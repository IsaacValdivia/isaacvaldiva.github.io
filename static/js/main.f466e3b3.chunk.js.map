{"version":3,"sources":["res/headshot.jpg","components/OwnCarousel/OwnCarousel.js","components/OwnCarousel/index.js","components/Node/index.js","components/Node/Node.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","items","id","altText","caption","OwnCarousel","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","className","tag","key","onExiting","onExited","width","height","src","allow","allowFullScreen","webkitallowfullscreen","mozallowfullscreen","Carousel","interval","CarouselControl","direction","directionText","onClickHandler","Node","size","buttonStyle","disabled","modal","setModal","toggle","closeBtn","onClick","Button","title","icon","Modal","centered","isOpen","ModalHeader","close","ModalBody","METAL_ICON","ORCHESTRA_ICON","ELECTRONIC_ICON","CHAMBER_ICON","JAZZ_ICON","PERFORMANCE_ICON","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MID_RIGHT","MID_LEFT","BOT_LEFT","BOT_CENTER","BOT_RIGHT","lang","CompetenceContent","ListGroup","ListGroupItem","Progress","animated","value","color","LanguagePicker","dropdownOpen","setOpen","setLanguage","_lang","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","InfoPanel","fadeInAbout","setFadeInAbout","fadeInCompe","setFadeInCompe","toggleAbout","toggleCompe","closeBtnAbout","closeBtnCompe","Card","CardImg","top","Headshot","alt","useMediaQuery","query","contentClassName","aboutText","Fade","in","CardImgOverlay","ButtonGroup","vertical","type","outline","App","class","Container","fluid","Row","Col","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f466e3b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.2d0fca85.jpg\";","import React, { useState } from \"react\";\r\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from \"reactstrap\";\r\n\r\nimport \"./OwnCarousel.css\";\r\n\r\nconst items = [\r\n  {\r\n    id: 1,\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\"\r\n  },\r\n  {\r\n    id: 2,\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\"\r\n  },\r\n  {\r\n    id: 3,\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\"\r\n  }\r\n];\r\n\r\nconst OwnCarousel = props => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = newIndex => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = items.map(item => {\r\n    return (\r\n      <CarouselItem\r\n        className=\"custom-tag\"\r\n        tag=\"div\"\r\n        key={item.id}\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n      >\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src=\"https://www.youtube.com/embed/7QZ6S6tfF78\"\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen=\"true\"\r\n          webkitallowfullscreen=\"true\"\r\n          mozallowfullscreen=\"true\"\r\n        ></iframe>\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Carousel interval={false} activeIndex={activeIndex} next={next} previous={previous}>\r\n        {slides}\r\n        <CarouselControl className=\"buttonCar\" direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n        <CarouselControl className=\"buttonCar\" direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnCarousel;","import OwnCarousel from \"./OwnCarousel\";\r\n\r\nexport default OwnCarousel;\r\n","import Node from \"./Node\";\r\n\r\nexport default Node;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport OwnCarousel from \"../OwnCarousel\";\r\n\r\nimport \"./Node.css\";\r\n\r\nconst Node = (props) => {\r\n\r\n  let buttonStyle = \"btn-ripple rounded-circle \";\r\n  let size;\r\n  if (props.disabled) {\r\n    buttonStyle += \"disabledButton\";\r\n    size = \"sm\";\r\n  } else {\r\n    buttonStyle += \"roundButton\";\r\n    size = \"md\";\r\n  }\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const closeBtn = (\r\n    <button className=\"close xButton\" onClick={toggle}>\r\n      &times;\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button className={buttonStyle} disabled={props.disabled} size={size} onClick={toggle}>\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center responsiveContent\">\r\n          {props.disabled ? \"\" : props.title}\r\n          <span className=\"responsiveIcon\">{props.disabled ? \"\" : props.icon}</span>\r\n        </div>\r\n      </Button>\r\n      <Modal centered isOpen={modal} toggle={toggle} className=\"modalContainer unfoldIn\">\r\n        <ModalHeader\r\n          className=\"modalHeader d-flex flex-row justify-content-end align-items-center\"\r\n          toggle={toggle}\r\n          close={closeBtn}\r\n        >\r\n          <span className=\"headerText\">{props.title}</span>\r\n        </ModalHeader>\r\n        <ModalBody className=\"modalBody\">\r\n          <div className=\"embed-responsive\">\r\n            <OwnCarousel />\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Node;","import React, { useState } from \"react\";\nimport { ButtonGroup, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { Card, CardImg, CardImgOverlay, CardFooter, CardBody, Fade, Progress } from \"reactstrap\";\nimport { Container, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { GiOcarina, GiProcessor, GiMinerals, GiViolin, GiSoundWaves, GiSaxophone, GiQuillInk, GiPianoKeys } from \"react-icons/gi\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Node from \"./components/Node\";\nimport './App.css';\nimport Headshot from \"./res/headshot.jpg\"\nimport './constants/Constants';\nimport { mediaBreakpoint } from \"./constants/Constants\";\nimport { about as aboutText } from \"./text.json\";\n\n\nconst METAL_ICON = <GiMinerals />;\nconst ORCHESTRA_ICON = <GiViolin />;\nconst ORCHESTRA_CALM_ICON = <GiOcarina />;\nconst ORCHESTRA_INTENSE_ICON = <GiOcarina />;\nconst ELECTRONIC_ICON = <GiSoundWaves />;\nconst ELECTRONIC_CALM = <GiOcarina />;\nconst ELECTRONIC_INTENSE = <GiOcarina />;\nconst CHAMBER_ICON = <GiQuillInk />;\nconst JAZZ_ICON = <GiSaxophone />;\nconst PERFORMANCE_ICON = <GiPianoKeys />;\n\n\nconst TOP_LEFT = <Node title=\"Metal&Rock\" icon={METAL_ICON} />;\nconst TOP_CENTER = <Node title=\"Orchestral\" icon={ORCHESTRA_ICON} />;\nconst TOP_RIGHT = <Node title=\"Electronic\" icon={ELECTRONIC_ICON} />;\nconst MID_RIGHT = <Node title=\"Chamber\" icon={CHAMBER_ICON} />;\nconst MID_LEFT = <Node title=\"Jazz\" icon={JAZZ_ICON} />;\nconst BOT_LEFT = <Node title=\"Metal\" icon={METAL_ICON} disabled/>;\nconst BOT_CENTER = <Node title=\"Performance\" icon={PERFORMANCE_ICON} />;\nconst BOT_RIGHT = <Node title=\"Metal\" icon={METAL_ICON} disabled/>;\n\nlet lang = \"EN\";\n\nconst CompetenceContent = (\n  <div>\n    <ListGroup className=\"competenceParentList\">\n      <ListGroupItem className=\"competenceSection\">\n        <span>DAWs</span>\n        <Progress animated value={90} color=\"dark\" className=\"progressBar\">\n          <span className=\"progressText\">Cubase</span>\n        </Progress>\n        <Progress animated value={90} color=\"dark\" className=\"mt-2 progressBar\">\n          <span className=\"progressText\">FL Studio</span>\n        </Progress>\n        <Progress animated value={20} color=\"dark\" className=\"mt-2 progressBar\">\n          <span className=\"progressText\">Pro Tools</span>\n        </Progress>\n        <Progress animated value={18} color=\"dark\" className=\"mt-2 progressBar\">\n          <span className=\"progressText\">Ableton</span>\n        </Progress>\n      </ListGroupItem>\n      <ListGroupItem className=\"competenceSection\">\n        <span>Middleware</span>\n        <Progress animated value={10} color=\"dark\" className=\"progressBar\">\n          <span className=\"progressText\">Wwise</span>\n        </Progress>\n        <Progress animated value={10} color=\"dark\" className=\"mt-2 progressBar\">\n          <span className=\"progressText\">Fmod</span>\n        </Progress>\n      </ListGroupItem>\n      <ListGroupItem className=\"competenceSection\">\n        <span>Other</span>\n        <Progress animated value={57} color=\"dark\" className=\"progressBar\">\n          <span className=\"progressText\">Sibelius</span>\n        </Progress>\n      </ListGroupItem>\n    </ListGroup>\n  </div>\n);\n\nconst LanguagePicker = (props) => {\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => {\n    setOpen(!dropdownOpen);\n  }\n\n  const setLanguage = (_lang) => {\n    lang = _lang;\n  }\n\n   return (\n     <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n       <DropdownToggle caret>{lang}</DropdownToggle>\n       <DropdownMenu right>\n         <DropdownItem onClick={() => setLanguage(\"EN\")}>EN</DropdownItem>\n         <DropdownItem divider />\n         <DropdownItem onClick={() => setLanguage(\"ES\")}>ES</DropdownItem>\n       </DropdownMenu>\n     </ButtonDropdown>\n   );\n};\n\nconst InfoPanel = props => {\n  const [fadeInAbout, setFadeInAbout] = useState(false);\n  const [fadeInCompe, setFadeInCompe] = useState(false);\n\n  const toggleAbout = () => {\n    setFadeInAbout(!fadeInAbout);\n    setFadeInCompe(false);\n  } \n\n  const toggleCompe = () => {\n    setFadeInCompe(!fadeInCompe);\n    setFadeInAbout(false);\n  };\n\n  const closeBtnAbout = (\n    <button className=\"close xButton\" onClick={toggleAbout}>\n      &times;\n    </button>\n  );\n\n  const closeBtnCompe = (\n    <button className=\"close xButton\" onClick={toggleCompe}>\n      &times;\n    </button>\n  );\n\n\n    return (\n      <Card className=\"h-100 w-100 justify-content-center align-items-center text-center cardView\">\n        <div>\n          <CardImg top className=\"roundHeadshot\" src={Headshot} alt=\"Card image cap\" />\n          {useMediaQuery({ query: \"(max-width: 992px)\" }) ? (\n            <div>\n              <Modal isOpen={fadeInAbout} toggle={toggleAbout} contentClassName=\"aboutModal\">\n                <ModalHeader toggle={toggleAbout} close={closeBtnAbout}>\n                  <span className=\"infoText\">About</span>\n                </ModalHeader>\n                <ModalBody className=\"modalBody\">{aboutText}</ModalBody>\n              </Modal>\n              <Modal isOpen={fadeInCompe} toggle={toggleCompe} contentClassName=\"aboutModal\">\n                <ModalHeader toggle={toggleCompe} close={closeBtnCompe}>\n                  <span className=\"infoText\">Competence</span>\n                </ModalHeader>\n                <ModalBody className=\"modalBody\">{CompetenceContent}</ModalBody>\n              </Modal>\n            </div>\n          ) : (\n            <div>\n              <Fade in={fadeInAbout} className=\"\">\n                <CardImgOverlay className=\"aboutOverlay\">\n                  <div className=\"fadeBody\">{aboutText}</div>\n                </CardImgOverlay>\n              </Fade>\n              <Fade in={fadeInCompe} className=\"\">\n                <CardImgOverlay className=\"aboutOverlay\">\n                  <div className=\"fadeBody\">{CompetenceContent}</div>\n                </CardImgOverlay>\n              </Fade>\n            </div>\n          )}\n        </div>\n\n        <ButtonGroup\n          vertical={useMediaQuery({ query: \"(max-width: 992px)\" })}\n          className=\"w-100 pt-1 headshotButtons justify-content-center align-items-center\"\n        >\n          <Button\n            type=\"button\"\n            outline={!fadeInAbout}\n            className=\"infoButton w-100 h-100 text-white\"\n            onClick={toggleAbout}\n          >\n            <span className=\"lowerButtonText\">About</span>\n          </Button>\n          <Button\n            type=\"button\"\n            outline={!fadeInCompe}\n            className=\"infoButton w-100 h-100 text-white\"\n            onClick={toggleCompe}\n          >\n            <span className=\"lowerButtonText\">Competence</span>\n          </Button>\n        </ButtonGroup>\n      </Card>\n    );\n};\n\nconst App = () => {\n    return (\n      <div>\n        <div class=\"lines\">\n          <div class=\"line\"></div>\n          <div class=\"line\"></div>\n          <div class=\"line\"></div>\n        </div>\n        <div className=\" d-flex flex-column justify-content-start mainView\">\n          <div className=\"d-flex flex-row justify-content-between topBar\">\n            <ButtonGroup size={useMediaQuery({ query: \"(max-width: \" + mediaBreakpoint + \"px )\" }) ? \"sm\" : \"md\"}>\n              <Button>\n                <GiOcarina className=\"topBarIcon\" />\n                AUDIO\n              </Button>\n              <Button outline>\n                <GiProcessor className=\"topBarIcon pr-1\" />\n                PROGRAMMING\n              </Button>\n            </ButtonGroup>\n\n            <LanguagePicker />\n          </div>\n\n          <Container fluid className=\"mainCont h-100 d-flex flex-column justify-content-around\">\n            <Row className=\"\">\n              <Col className=\"d-flex flex-column justify-content-center align-items-center\">{TOP_LEFT}</Col>\n              <Col xs={5} className=\"d-flex flex-column justify-content-center align-items-center\">\n                {TOP_CENTER}\n              </Col>\n              <Col className=\"d-flex flex-column justify-content-center align-items-center\">{TOP_RIGHT}</Col>\n            </Row>\n            <Row className=\" d-flex flex-row align-items-center\">\n              <Col className=\"h-100 d-flex flex-column justify-content-center align-items-center\">{MID_LEFT}</Col>\n              <Col xs={5} className=\"w-100 h-100 d-flex flex-column justify-content-center align-items-center\">\n                <InfoPanel/>\n              </Col>\n              <Col className=\"h-100 d-flex flex-column justify-content-center align-items-center\">{MID_RIGHT}</Col>\n            </Row>\n            <Row className=\"\">\n              <Col className=\"d-flex flex-column justify-content-center align-items-center\">{BOT_LEFT}</Col>\n              <Col xs={5} className=\"d-flex flex-column justify-content-center align-items-center\">\n                {BOT_CENTER}\n              </Col>\n              <Col className=\"d-flex flex-column justify-content-center align-items-center\">{BOT_RIGHT}</Col>\n            </Row>\n          </Container>\n        </div>\n        <div className=\"lowerZone d-flex flex-row justify-content-between text-white\">\n          <span className=\"lowerText\">© 2020 Isaac Valdivia</span>\n          <span className=\"lowerText\">isaac.valdivia.audio@gmail.com</span>\n        </div>\n      </div>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}